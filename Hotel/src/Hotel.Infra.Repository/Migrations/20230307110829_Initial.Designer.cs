// <auto-generated />
using System;
using Hotel.Infra.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.Infra.Repository.Migrations
{
    [DbContext(typeof(HotelContextDb))]
    [Migration("20230307110829_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotel.Domain.Entities.Booking", b =>
                {
                    b.Property<Guid>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckinDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CheckinDate");

                    b.Property<DateTime>("CheckoutDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CheckoutDate");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HotelID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdate");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal")
                        .HasColumnName("TotalCost");

                    b.HasKey("BookingID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("HotelID");

                    b.HasIndex("RoomID");

                    b.ToTable("Bookings", (string)null);

                    b.HasData(
                        new
                        {
                            BookingID = new Guid("5609965f-1836-4bcb-a578-72eaf39ce08c"),
                            CheckinDate = new DateTime(2023, 3, 8, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5058),
                            CheckoutDate = new DateTime(2023, 3, 9, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5064),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5065),
                            CustomerID = new Guid("bab9f53b-1162-48e3-8ca5-3665cdf7ed13"),
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomID = new Guid("9dce4c50-bd22-466b-a027-113b78fc2efc"),
                            TotalCost = 100m
                        },
                        new
                        {
                            BookingID = new Guid("81447f3f-e4a9-48eb-90e5-fc7fc31ee9a6"),
                            CheckinDate = new DateTime(2023, 3, 8, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5071),
                            CheckoutDate = new DateTime(2023, 3, 9, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5071),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5072),
                            CustomerID = new Guid("da31a0a5-c5aa-46a7-a057-92ed407a91ca"),
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomID = new Guid("a384278b-e072-42cd-9ef9-0dc6195f3d85"),
                            TotalCost = 100m
                        },
                        new
                        {
                            BookingID = new Guid("34957021-afa0-4d54-9839-5421cd0090a9"),
                            CheckinDate = new DateTime(2023, 3, 8, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5077),
                            CheckoutDate = new DateTime(2023, 3, 9, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5078),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5078),
                            CustomerID = new Guid("920ca78e-42de-4486-b168-e853a2c2f4f6"),
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomID = new Guid("0f66e4ab-6e5d-4596-910d-ae5a1d3ffb44"),
                            TotalCost = 100m
                        },
                        new
                        {
                            BookingID = new Guid("911c220d-59c8-4fba-bb7d-50ed1ba184a9"),
                            CheckinDate = new DateTime(2023, 3, 8, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5080),
                            CheckoutDate = new DateTime(2023, 3, 9, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5081),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5081),
                            CustomerID = new Guid("898a0311-5b33-438f-a8e2-1060fa4f3922"),
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomID = new Guid("a53634f9-9fa1-4589-b6c5-dd5231554137"),
                            TotalCost = 100m
                        });
                });

            modelBuilder.Entity("Hotel.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("BirthDate");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<int>("SIN")
                        .HasMaxLength(9)
                        .HasColumnType("integer")
                        .HasColumnName("SIN");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerID = new Guid("bab9f53b-1162-48e3-8ca5-3665cdf7ed13"),
                            BirthDate = new DateTime(1967, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5016),
                            Email = "zakk@mail.com",
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zakk Wylde",
                            SIN = 123456789
                        },
                        new
                        {
                            CustomerID = new Guid("da31a0a5-c5aa-46a7-a057-92ed407a91ca"),
                            BirthDate = new DateTime(1948, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5024),
                            Email = "ozzy@mail.com",
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ozzy Osbourne",
                            SIN = 987654321
                        },
                        new
                        {
                            CustomerID = new Guid("920ca78e-42de-4486-b168-e853a2c2f4f6"),
                            BirthDate = new DateTime(1971, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5028),
                            Email = "randy@mail.com",
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Randy Blythe",
                            SIN = 111456222
                        },
                        new
                        {
                            CustomerID = new Guid("898a0311-5b33-438f-a8e2-1060fa4f3922"),
                            BirthDate = new DateTime(1942, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5033),
                            Email = "dio@mail.com",
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ronnie James Dio",
                            SIN = 222456333
                        },
                        new
                        {
                            CustomerID = new Guid("82420972-db0f-4d3a-9ff2-b63654b8df82"),
                            BirthDate = new DateTime(1963, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5037),
                            Email = "james@mail.com",
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "James Hetfield",
                            SIN = 333456444
                        });
                });

            modelBuilder.Entity("Hotel.Domain.Entities.Hotel", b =>
                {
                    b.Property<Guid>("HotelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("HotelID");

                    b.ToTable("Hotels", (string)null);

                    b.HasData(
                        new
                        {
                            HotelID = new Guid("42a5e8f5-5745-4231-8cd3-47a0e4c0f098"),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(4689),
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hotel A"
                        });
                });

            modelBuilder.Entity("Hotel.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<decimal>("DailyRate")
                        .HasColumnType("decimal")
                        .HasColumnName("DailyRate");

                    b.Property<Guid>("HotelID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("IsAvailable");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdate");

                    b.Property<DateTime>("NextBookingAvailableDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("NextBookingAvailableDate");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("Number");

                    b.HasKey("RoomID");

                    b.HasIndex("HotelID");

                    b.ToTable("Rooms", (string)null);

                    b.HasData(
                        new
                        {
                            RoomID = new Guid("9dce4c50-bd22-466b-a027-113b78fc2efc"),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5101),
                            DailyRate = 100m,
                            HotelID = new Guid("42a5e8f5-5745-4231-8cd3-47a0e4c0f098"),
                            IsAvailable = false,
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NextBookingAvailableDate = new DateTime(2023, 3, 10, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5102),
                            Number = 1
                        },
                        new
                        {
                            RoomID = new Guid("a384278b-e072-42cd-9ef9-0dc6195f3d85"),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5104),
                            DailyRate = 100m,
                            HotelID = new Guid("42a5e8f5-5745-4231-8cd3-47a0e4c0f098"),
                            IsAvailable = false,
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NextBookingAvailableDate = new DateTime(2023, 3, 10, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5105),
                            Number = 2
                        },
                        new
                        {
                            RoomID = new Guid("0f66e4ab-6e5d-4596-910d-ae5a1d3ffb44"),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5107),
                            DailyRate = 100m,
                            HotelID = new Guid("42a5e8f5-5745-4231-8cd3-47a0e4c0f098"),
                            IsAvailable = false,
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NextBookingAvailableDate = new DateTime(2023, 3, 10, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5108),
                            Number = 3
                        },
                        new
                        {
                            RoomID = new Guid("a53634f9-9fa1-4589-b6c5-dd5231554137"),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5110),
                            DailyRate = 100m,
                            HotelID = new Guid("42a5e8f5-5745-4231-8cd3-47a0e4c0f098"),
                            IsAvailable = false,
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NextBookingAvailableDate = new DateTime(2023, 3, 10, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5111),
                            Number = 4
                        },
                        new
                        {
                            RoomID = new Guid("8cc47e03-8bc0-405f-80d3-a1736f69904e"),
                            CreatedDate = new DateTime(2023, 3, 7, 8, 8, 29, 577, DateTimeKind.Local).AddTicks(5113),
                            DailyRate = 100m,
                            HotelID = new Guid("42a5e8f5-5745-4231-8cd3-47a0e4c0f098"),
                            IsAvailable = true,
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NextBookingAvailableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Number = 5
                        });
                });

            modelBuilder.Entity("Hotel.Domain.Entities.Booking", b =>
                {
                    b.HasOne("Hotel.Domain.Entities.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Domain.Entities.Hotel", null)
                        .WithMany("Bookings")
                        .HasForeignKey("HotelID");

                    b.HasOne("Hotel.Domain.Entities.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Hotel.Domain.Entities.Room", b =>
                {
                    b.HasOne("Hotel.Domain.Entities.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Hotel.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Hotel.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Hotel.Domain.Entities.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
